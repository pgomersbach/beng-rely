#platform=x86, AMD64, or Intel EM64T
#version=DEVEL
# Network information
network  --bootproto=static --device=eth0 --gateway=172.19.53.254 --ip=172.19.53.35 --nameserver=172.18.99.210 --netmask=255.255.255.0 --onboot=on --hostname puppet.beeldengeluid.nl
# Firewall configuration
firewall --disabled
# Install OS instead of upgrade
install
# Use CDROM installation media
#cdrom
# use http installation media
url --url=http://sjefkeschelm.beeldengeluid.nl/cdrom_7.2
# use http installation media Centos media
#url --url=http://sjefkeschelm.beeldengeluid.nl/Centos/cdrom_7.2/
# Root password
rootpw --iscrypted $1$M52kCjTk$vRkVC78UxaURJriDf0z9a.
#standaard keyusers define in puppet
# System authorization information
auth  --useshadow  --passalgo=sha512
# Use text mode install
text
# System keyboard
keyboard us
# System language
lang en_US
# SELinux configuration
selinux --disabled
# Do not configure the X Window System
skipx
# Installation logging level
logging --level=info
# Reboot after installation?
reboot
# System timezone
timezone  Europe/Amsterdam --ntpservers=172.18.99.210,172.18.99.211
#service auto start
services --enabled=ntpd,rc-local
# System bootloader configuration
bootloader --location=mbr --append="rhgb quiet crashkernel=auto"
# Clear the Master Boot Record
zerombr
# Partition clearing information
clearpart --all --initlabel 
# Disk partitioning information
part /boot --asprimary --fstype="ext4" --size=500
part swap --fstype="swap" --recommended
part /home --fstype="ext4" --size=10000
part /opt --asprimary --fstype="ext4" --grow --size=1
part / --asprimary --fstype="ext4" --size=50000

%post
echo "Installing RHEL repo" > /root/kickstart.log
cat > /etc/yum.repos.d/RHEL_dvd.repo << EOF
[RHEL_7.2_x86_64]
name=rhel_7.2_x86_64
baseurl=http://sjefkeschelm.beeldengeluid.nl/cdrom_7.2
enabled=1
gpgcheck=0
EOF

echo "Setting up rc.local and install script" >> /root/kickstart.log
cat > /etc/rc.d/rc.local << EOF
#!/bin/bash
if [ ! -d  /root/puppetlog/ ];
  then
  mkdir -p /root/puppetlog/
fi
# start real work here
exec 2> /root/puppetlog/rc.local.log      # send stderr from rc.local to a log file
exec 1>&2                      # send stdout to the same log file
echo "rc.local started"        # show start of execution
set -x                         # tell sh to display commands before execution
if [ ! -f "/root/puppetlog/logcheckfile" ];
  then
  #here the line that get thing rolling in the rc.local
  curl https://raw.githubusercontent.com/relybv/beng-role_deployserver/master/files/bootme.sh -o bootme.sh; bash bootme.sh
  fi
  if [ ! -d  /root/puppetlog/ ];
    then
    mkdir -p /root/puppetlog/
  fi
  touch /root/puppetlog/logcheckfile
echo "rc.local completed"
exit 0
EOF
echo  "Change rc.local status Cloning and install" >> /root/kickstart.log
chmod u+x /etc/rc.d/rc.local

%end

%packages
@base
@console-internet
@development
@network-file-system-client
@network-tools
@perl-runtime
@ruby-runtime
net-snmp
open-vm-tools
ntp
git

%end
